// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OHD.Data;

namespace OHD.Migrations
{
    [DbContext(typeof(ODHContext))]
    partial class ODHContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("OHD.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastNme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("OHD.Models.TblAssignbyAssignto", b =>
                {
                    b.Property<int>("ByToId")
                        .HasColumnName("by_to_id")
                        .HasColumnType("int");

                    b.Property<int?>("AssignbyId")
                        .HasColumnName("assignby_id")
                        .HasColumnType("int");

                    b.Property<int?>("AssigntoId")
                        .HasColumnName("assignto_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AssignyDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("assigny_date")
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ByToId")
                        .HasName("PK__tbl_assi__49C454DE88E84FCB");

                    b.HasIndex("AssignbyId");

                    b.ToTable("tbl_assignby_assignto");
                });

            modelBuilder.Entity("OHD.Models.TblAssignees", b =>
                {
                    b.Property<int>("AssiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("assi_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssiName")
                        .HasColumnName("assi_name")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("AssiId")
                        .HasName("PK__tbl_assi__7333958E04AA1BBF");

                    b.ToTable("tbl_assignees");
                });

            modelBuilder.Entity("OHD.Models.TblComplaints", b =>
                {
                    b.Property<int>("CompId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("comp_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BriefComplain")
                        .HasColumnName("complain")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("CompAssiId")
                        .HasColumnName("comp_assi_id")
                        .HasColumnType("int");

                    b.Property<int?>("CompFacilitySelectedId")
                        .HasColumnName("comp_facilitySelected_Id")
                        .HasColumnType("int");

                    b.Property<string>("CompName")
                        .HasColumnName("comp_name")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CompRequestdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("comp_requestdate")
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CompStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("comp_status")
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("ContactNumber")
                        .HasColumnName("con_Number")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .HasColumnName("Email_address")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Rasidance")
                        .HasColumnName("Rasidance")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("userId")
                        .HasColumnName("comp_identity_id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CompId")
                        .HasName("PK__tbl_comp__531653DD0E7905B6");

                    b.HasIndex("CompAssiId");

                    b.HasIndex("CompFacilitySelectedId");

                    b.HasIndex("CompStatusId");

                    b.HasIndex("userId");

                    b.ToTable("tbl_complaints");
                });

            modelBuilder.Entity("OHD.Models.TblFacilities", b =>
                {
                    b.Property<int>("FaciId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("faci_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FaciBrifedescription")
                        .HasColumnName("faci_brifedescription")
                        .HasColumnType("varchar(1200)")
                        .HasMaxLength(1200)
                        .IsUnicode(false);

                    b.Property<string>("FaciFacilities")
                        .HasColumnName("faci_facilities")
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("FaciImage")
                        .HasColumnName("faci_Image")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("FaciId")
                        .HasName("PK__tbl_faci__D698B94277AF3BCC");

                    b.ToTable("tbl_facilities");
                });

            modelBuilder.Entity("OHD.Models.TblFacilityImages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("multiImage_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FaciId")
                        .HasColumnName("faci_id")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnName("facilityImages")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FaciId");

                    b.ToTable("tbl_multipleFacilityImages");
                });

            modelBuilder.Entity("OHD.Models.TblLab", b =>
                {
                    b.Property<int>("LabId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("lab_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LabDescirption")
                        .HasColumnName("lab_descirption")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int?>("LabFacilityId")
                        .HasColumnName("lab_facility_id")
                        .HasColumnType("int");

                    b.Property<string>("LabName")
                        .HasColumnName("lab_name")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("LabId")
                        .HasName("PK__tbl_lab__66DE64DBF0F4DAFF");

                    b.HasIndex("LabFacilityId");

                    b.ToTable("tbl_lab");
                });

            modelBuilder.Entity("OHD.Models.TblMaintaines", b =>
                {
                    b.Property<int>("MaintId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("maint_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MaintLabId")
                        .HasColumnName("maint_lab_id")
                        .HasColumnType("int");

                    b.Property<int?>("MaintStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("maint_status")
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("MaintId")
                        .HasName("PK__tbl_main__56128A704B36B56A");

                    b.HasIndex("MaintLabId");

                    b.ToTable("tbl_maintaines");
                });

            modelBuilder.Entity("OHD.Models.TblStudentCouncil", b =>
                {
                    b.Property<int>("StuConsId")
                        .HasColumnName("stu_cons_id")
                        .HasColumnType("int");

                    b.Property<string>("StuConsName")
                        .HasColumnName("stu_cons_name")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int?>("StuMaintaniesId")
                        .HasColumnName("stu_maintanies_id")
                        .HasColumnType("int");

                    b.HasKey("StuConsId")
                        .HasName("PK__tbl_stud__2D1C5666CFBE55DB");

                    b.HasIndex("StuMaintaniesId");

                    b.ToTable("tbl_student_council");
                });

            modelBuilder.Entity("OHD.Models.tblStatus", b =>
                {
                    b.Property<int>("StId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StId");

                    b.ToTable("tblStatus");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("OHD.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("OHD.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OHD.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("OHD.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OHD.Models.TblAssignbyAssignto", b =>
                {
                    b.HasOne("OHD.Models.TblAssignees", "Assignby")
                        .WithMany("TblAssignbyAssignto")
                        .HasForeignKey("AssignbyId")
                        .HasConstraintName("FK__tbl_assig__assig__3C69FB99");
                });

            modelBuilder.Entity("OHD.Models.TblComplaints", b =>
                {
                    b.HasOne("OHD.Models.TblAssignees", "CompAssi")
                        .WithMany("TblComplaints")
                        .HasForeignKey("CompAssiId")
                        .HasConstraintName("FK__tbl_compl__comp___44FF419A");

                    b.HasOne("OHD.Models.TblFacilities", "CompFacilitySelected")
                        .WithMany("TblComplaints")
                        .HasForeignKey("CompFacilitySelectedId")
                        .HasConstraintName("FK__tbl_compl__comp___4316F928");

                    b.HasOne("OHD.Models.tblStatus", "Status")
                        .WithMany("TblComplaints")
                        .HasForeignKey("CompStatusId");

                    b.HasOne("OHD.Models.ApplicationUser", "User")
                        .WithMany("TblComplaints")
                        .HasForeignKey("userId");
                });

            modelBuilder.Entity("OHD.Models.TblFacilityImages", b =>
                {
                    b.HasOne("OHD.Models.TblFacilities", "tblFacility")
                        .WithMany("TblFacilityImages")
                        .HasForeignKey("FaciId");
                });

            modelBuilder.Entity("OHD.Models.TblLab", b =>
                {
                    b.HasOne("OHD.Models.TblFacilities", "LabFacility")
                        .WithMany("TblLab")
                        .HasForeignKey("LabFacilityId")
                        .HasConstraintName("FK__tbl_lab__lab_fac__48CFD27E");
                });

            modelBuilder.Entity("OHD.Models.TblMaintaines", b =>
                {
                    b.HasOne("OHD.Models.TblLab", "MaintLab")
                        .WithMany("TblMaintaines")
                        .HasForeignKey("MaintLabId")
                        .HasConstraintName("FK__tbl_maint__maint__4BAC3F29");
                });

            modelBuilder.Entity("OHD.Models.TblStudentCouncil", b =>
                {
                    b.HasOne("OHD.Models.TblMaintaines", "StuMaintanies")
                        .WithMany("TblStudentCouncil")
                        .HasForeignKey("StuMaintaniesId")
                        .HasConstraintName("FK__tbl_stude__stu_m__4F7CD00D");
                });
#pragma warning restore 612, 618
        }
    }
}
